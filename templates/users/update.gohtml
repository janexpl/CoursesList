{{ define "users/update" }}
<div id="app">
    <v-app>
      <v-content>
        <v-toolbar flat color="white">
          <v-toolbar-title>Zmień swoje dane</v-toolbar-title>
         
        </v-toolbar>
        <v-form ref="form" v-model="valid" lazy-validation>
            <v-container >
                <v-layout align-center justify-center row wrap>
                  <v-flex xs8 >
                    <v-text-field
                      v-model="editedItem.firstname"
                      label="Imię"
                      :rules="nameRules"
                      required
                    ></v-text-field>
                  </v-flex>
                  <v-flex xs8>
                    <v-text-field
                      v-model="editedItem.lastname"
                      label="Nazwisko"
                      :rules="nameRules"
                      required
                    ></v-text-field>
                  </v-flex>
                  <v-flex xs8>
                    <v-text-field
                      v-model="editedItem.email"
                      label="Email"
                      :rules="emailRules"
                      required
                    ></v-text-field>
                  </v-flex>
                  <v-flex xs8>
                    <v-text-field
                      v-model="editedItem.spassword"
                      label="Hasło"
                      type="password"
                      
                      
                    ></v-text-field>
                  </v-flex>
            </v-form>
          </v-layout>
          <v-layout align-end justify-end >
            <v-flex xs2>
             <v-btn color="blue darken-1" @click="save" :disabled="!valid">Zapisz</v-btn>
            </v-flex>
          </v-layout>
          </v-container>
        </v-content>
    </v-app>
</div>

<script>
  Vue.use(Vuetify, {
      theme: {
        primary: '#3f51b5', // #E53935
        secondary: '#E57373', // 
        accent: '#3F51B5' // #3F51B5
      }
    });
    new Vue({ el: '#app',
    delimiters: ['${', '}'],
    data: () => ({
      valid: true,
      nameRules: [
        v => !!v || 'Uzupełnij dane',
      ],
      emailRules: [
        v => !!v || 'E-mail jest wymagany',
        v => /.+@.+/.test(v) || 'E-mail musi być poprawny'
      ],
      editedIndex: -1,
      editedItem: {
        id: 0,
        firstname: '',
        lastname: '',
        email: '',
        spassword: '',
        role: false
      },
    }),
    created () {
      this.initialize()
    },
    methods: {
      initialize () {
        axios
        .get('/users/getuser')
        .then((response) => {
            console.log(response.data)
            this.editedItem = response.data;
            this.editedIndex.spassword = '';
        })
      },
      save () {
        if (this.$refs.form.validate()) {
          console.log(this.editedItem)
        axios
          .put('/users/json', {
            id: this.editedItem.id,
            firstname: this.editedItem.firstname,
            lastname: this.editedItem.lastname,
            spassword: this.editedItem.spassword,
            email: this.editedItem.email,
            role: this.editedItem.role
          })
          .then(function (response) {
            window.location.replace('/')
            // console.log(this.users);
          })
          .catch(function (error) {
            console.log(error);
          });
        }
      }
    }
  })
</script>

<style>
</style>

{{ end }}